import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

buildscript {
  repositories {
    jcenter()
  }

  dependencies {
    classpath 'com.bmuschko:gradle-docker-plugin:3.1.0'
  }
}

apply plugin: com.bmuschko.gradle.docker.DockerRemoteApiPlugin


task copyDockerFiles(type: Copy, dependsOn: 'bootRepackage') {
  description = "Copy Dockerfile and required data to build directory"
  from 'src/main/docker'
  from "${project.buildDir}/libs"
  into { "${project.buildDir}/docker" }
  exclude "*.jar.original"
}

task buildDocker(type: DockerBuildImage, dependsOn: 'copyDockerFiles') {
  def versionTag = "sensefly/dynamodb-to-s3:${project.version}".toString()
  def latestTag = "sensefly/dynamodb-to-s3:latest".toString()

  description = "Package application as Docker image"
  group = "Docker"
  inputDir = project.file("${project.buildDir}/docker")
  tags = [versionTag, latestTag]
}
