plugins {
  id "org.jetbrains.kotlin.jvm" version "1.1.51"
  id "org.jetbrains.kotlin.plugin.allopen" version "1.1.51"
  id 'org.springframework.boot' version '1.5.8.RELEASE'
  id "io.spring.dependency-management" version "1.0.3.RELEASE"
  id "com.jfrog.bintray" version "1.7.3"
}

group = 'io.sensefly.dynamodb-to-s3'
version =  "1.1.0-SNAPSHOT"
description = "Log4j 2.x appender for AWS CloudWatch logs"

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: "jacoco"
apply plugin: "idea"
apply plugin: "maven-publish"
apply from: "gradle/docker.gradle"

sourceCompatibility = 1.8
compileKotlin {
  kotlinOptions.jvmTarget = "1.8"
}
compileTestKotlin {
  kotlinOptions.jvmTarget = "1.8"
}

repositories {
  jcenter()
  mavenCentral()
  maven { url 'http://dynamodb-local.s3-website-us-west-2.amazonaws.com/release' }
  mavenLocal()
}

ext {
  aws_version = '1.11.224'
  kotlin_version = '1.1.51'
  runtimeTestLibraries = "$buildDir/runtimeTestLibraries"
}

dependencyManagement {
  imports {
    mavenBom 'org.springframework.boot:spring-boot-starter-parent:1.5.8.RELEASE'
  }
}

dependencies {
  compile('org.springframework.boot:spring-boot-starter-actuator') {
    exclude(module: "logback-core")
    exclude(module: "logback-classic")
  }
  compile "org.springframework.boot:spring-boot-starter-log4j2"
  compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
  compile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
  compile "com.amazonaws:aws-java-sdk-core:$aws_version"
  compile "com.amazonaws:aws-java-sdk-dynamodb:$aws_version"
  compile 'javax.inject:javax.inject:1'
  compile 'com.github.alexmojaki:s3-stream-upload:1.0.1'
  compile 'com.google.guava:guava:23.2-jre'
  compile 'com.beust:jcommander:1.72'
  compile "com.fasterxml.jackson.module:jackson-module-kotlin:${dependencyManagement.importedProperties['jackson.version']}"
  compile 'com.ryantenney.metrics:metrics-spring:3.1.3'
  compile "io.dropwizard.metrics:metrics-jvm:${dependencyManagement.importedProperties['dropwizard-metrics.version']}"
  compile ('io.github.azagniotov:dropwizard-metrics-cloudwatch:1.0.5') {
    exclude(module: "logback-core")
    exclude(module: "logback-classic")
  }

  runtime ('io.sensefly.logging.log4j:log4j-cloudwatch-appender:1.0.2')

  testCompile 'org.springframework.boot:spring-boot-starter-test'
  testCompile 'net.javacrumbs.json-unit:json-unit:1.25.1'
  testCompile 'com.nhaarman:mockito-kotlin-kt1.1:1.5.0'
  testCompile 'io.findify:s3mock_2.12:0.2.3'
  testCompile 'com.amazonaws:DynamoDBLocal:1.11.86'
}

//copy current test runtime configurations into runtimeTestLibraries dir
task copyRuntimeLibs(type: Copy) {
  into runtimeTestLibraries
  from configurations.testRuntime
}

//set the system property library path to the current runtimeTestLibraries dir
tasks.withType(Test) {
  dependsOn 'copyRuntimeLibs'
  systemProperty "java.library.path", runtimeTestLibraries
}

jacoco {
  toolVersion = "0.7.9"
}

jacocoTestReport {
  reports {
    xml.enabled = true
    html.enabled = false
  }
}
check.dependsOn jacocoTestReport

// package source jar
task sourcesJar(type: Jar, dependsOn: classes) {
  classifier = "sources"
  from sourceSets.main.allSource
}

publishing {
  publications {
    BintrayPublication(MavenPublication) {
      from components.java
      artifact(sourcesJar) {
        classifier = "sources"
        groupId project.group
        artifactId project.name
        version  project.version
      }
    }
  }
}

bintray {
  user = System.env.BINTRAY_USER
  key = System.env.BINTRAY_API_KEY
  publications = ['BintrayPublication']
  publish = true
  pkg {
    repo = 'maven'
    name = project.name
    userOrg = 'sensefly'
    vcsUrl = 'https://github.com/sensefly-sa/dynamodb-to-s3.git'
    version {
      name = project.version
      released  = new Date()
    }
  }
}
